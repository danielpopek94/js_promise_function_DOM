{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","printMessage","message","messageContainer","document","createElement","innerText","classList","add","body","appendChild","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,GAClBH,EAAQI,iBAAiBH,EAAW,WAClCE,EACE,UAAUF,OAAAA,EACLD,qBAAAA,GAAAA,OAAAA,EAAQK,SACJL,MAAAA,OAAAA,OAAAA,EAAQM,GAHZ,UASb,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAmBC,SAASC,cAAc,OAEhDF,EAAiBG,UAAYJ,EAC7BC,EAAiBI,UAAUC,IAAI,WAC/BJ,SAASK,KAAKC,YAAYP,IAG5BQ,OAAOC,QAAU,CACfnB,QAAAA,EACAQ,aAAAA","file":"main.1b842e1d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve) => {\n    element.addEventListener(eventName, () => {\n      resolve(\n        `It was ${eventName} on the element: `\n        + `${element.nodeName}, `\n        + `id: ${element.id}.`\n      );\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const messageContainer = document.createElement('div');\n\n  messageContainer.innerText = message;\n  messageContainer.classList.add('message');\n  document.body.appendChild(messageContainer);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}